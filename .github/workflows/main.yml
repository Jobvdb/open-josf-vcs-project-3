name: CI
on:
  # Triggers
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2019
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: './JOSF/testcases'

      - name: Download JOSF
        shell: pwsh
        run: |
            $url = 'https://www.josf.nl/wp-content/releases/JOSF-2.16.2.zip'
            $localfile = './josf.zip'
            $wc = New-Object net.webclient
            $wc.Downloadfile($url, $localfile)
 
      - name:  Extract JOSF
        shell: pwsh
        run: | 
            7z x josf.zip JOSF\ -r  
            
#      - name: publish artifact
#        uses: actions/upload-artifact@v2
#        with:
#          path: ${{ github.workspace }}\JOSF
#          name: ${{ env.VERSION_MAJOR }}.${{ env.VERSION_MINOR }}

#      - name: JOSF4
#        shell: pwsh
#        run: |
#          Get-ChildItem -Path ${{ github.workspace }}
#          Get-ChildItem -Path ${{ github.workspace }}\JOSF\
          

      - name: Start JOSF
        shell: pwsh
        run: |
          start-process .\josf\api\start.bat

      - name: Wait for JOSF to start
        shell: pwsh
        run: |
          Write-Host 'waiting for JOSF to be online'
          $statusCode = 0;
          Do {
              Write-Host -NoNewline '.'
              try {
                $statusCode = (Invoke-WebRequest 'http://localhost:8090/api/version').StatusCode;
                Start-Sleep -Milliseconds 750
              } catch {
                $statusCode = 0;
              }
          } While (!$statusCode -eq 200)

      - name: Verify JOSF CLI
        shell: pwsh
        run: |
          Write-Host "Verify JOSF license with --verify"
          java -jar './josf/cli/josf-cli.jar' --verify

      - name: Execute playbook 
        shell: pwsh
        run: |
          $client = './josf/cli/josf-cli.jar'
          $arg = "java -jar '$client' -r playbook 'test'
          Invoke-Expression "cmd /c $arg"
